export declare enum Platform {
    ios = "ios",
    android = "android"
}
export interface Device {
    id: string;
    platform: Platform;
}
export declare class Auth {
    username: string;
    displayName: string;
    avatarUrl: string;
    isAnonymous: boolean;
    email: string;
    password: string;
    passwordSalt: string;
    lang: string;
    location: string;
    timezone: string;
    metadata: any;
    devices: Device[];
    facebookId: string;
    twitterId: string;
    googleId: string;
    gameCenterId: string;
    steamId: string;
    friendIds: string[];
    blockedUserIds: string[];
    createdAt: Date;
    updatedAt: Date;
    token: string;
    private static _current;
    constructor();
    checkToken(): void;
    static readonly current: Auth;
    static login(options: {
        accessToken?: string;
        deviceId?: string;
        platform?: string;
        email?: string;
        password?: string;
    }): Promise<Auth>;
    login(options: {
        accessToken?: string;
        deviceId?: string;
        platform?: string;
        email?: string;
        password?: string;
    }): Promise<this>;
    getFriends(): Promise<any>;
    getOnlineFriends(): Promise<any>;
    getFriendRequests(friendId: string): Promise<any>;
    sendFriendRequest(friendId: string): Promise<any>;
    acceptFriendRequest(friendId: string): Promise<any>;
    declineFriendRequest(friendId: string): Promise<any>;
    blockUser(friendId: string): Promise<any>;
    unblockUser(friendId: string): Promise<any>;
    logout(): void;
}
